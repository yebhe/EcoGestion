# Generated by Django 5.1.4 on 2025-04-08 14:47

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(error_messages={'unique': 'Un utilisateur avec cet email existe déjà.'}, max_length=254, unique=True, verbose_name='adresse email')),
                ('username', models.CharField(error_messages={'unique': "Un utilisateur avec ce nom d'utilisateur existe déjà."}, max_length=150, unique=True, verbose_name="nom d'utilisateur")),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='prénom')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='nom de famille')),
                ('user_type', models.CharField(choices=[('livreur', 'Livreur'), ('client', 'Client'), ('commercant', 'Commerçant'), ('prestataire', 'Prestataire de services'), ('admin', 'Administrateur')], default='client', help_text='Sélectionnez le type de compte utilisateur', max_length=20, verbose_name="type d'utilisateur")),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=10)),
                ('phone_number', models.CharField(blank=True, help_text='Votre numéro de téléphone pour les contacts', max_length=20, null=True, verbose_name='numéro de téléphone')),
                ('profile_image', models.ImageField(blank=True, help_text='Téléchargez une image de profil (optionnel)', null=True, upload_to='profile_images/', verbose_name='image de profil')),
                ('is_staff', models.BooleanField(default=False, help_text="Détermine si l'utilisateur peut accéder à l'interface d'administration.", verbose_name='statut personnel')),
                ('is_active', models.BooleanField(default=True, help_text='Détermine si ce compte utilisateur doit être traité comme actif.', verbose_name='actif')),
                ('is_verified', models.BooleanField(default=False, help_text="Indique si l'utilisateur a vérifié son adresse email.", verbose_name='vérifié')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name="date d'inscription")),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'utilisateur',
                'verbose_name_plural': 'utilisateurs',
            },
        ),
        migrations.CreateModel(
            name='VerificationToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=255, unique=True, verbose_name='jeton de vérification')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='créé le')),
                ('expires_at', models.DateTimeField(verbose_name='expire le')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='verification_token', to=settings.AUTH_USER_MODEL, verbose_name='utilisateur')),
            ],
            options={
                'verbose_name': 'jeton de vérification',
                'verbose_name_plural': 'jetons de vérification',
            },
        ),
    ]
